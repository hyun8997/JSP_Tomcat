+ Tomcat (WAS-Web Application Server, Servlet Container)

 - JSP Server(JSP Container, Servlet Container)는 JSP 코드 및 JAVA 코드를
     해석하여 처리하고 그 결과를 HTML로 변환해서 브라우저로 출력하는 역할
   
 - Tomcat 비슷한 서버로 JBoss, Resin, JRun, Webspere, WebLogic 등이 있음.
 
+ 서버 쪽 스크립트 (JSP, PHP, ASP, .NET ...)

 - 인터넷 브라우저가 읽어서 해석할 수 없어서 서버에 설치된 서블릿 컨테이너(WAS)를 통해서 실행되는 것들
 
 - HTML은 자료를 처리, 저장, 검색하는 기능이 없고 단지 출력하는 기능만 가지고 있음.
    따라서 데이터를 처리하고 싶으면 DBMS와 데이터베이스가 필요함.
    이 데이터베이스에 접근하려면 서버 스크립트가 필요함.
    
 - HTML은 보안성이 없으므로 DBMS에 바로 접속할 수 없음(처음부터 이런 기능이 없음)
   (HTML은 누구나 소스를 열어볼 수 있으므로)
     따라서 DBMS에 접근하려면 반드시 서버 스크립트를 사용해야 함.
     
 - JSP : 최초는 SUN사의 서버쪽 스크립트 기술. 모든 운영체제 지원. JAVA 기반.
         서블릿 컨테이너(WAS)가 설치되어 있어야 사용할 수 있음.
         전자 정부 framework의 기반 기술.
         대기업을 비롯한 대부분의 기업에서 폭넓게 사용.     

+ JSP 스크립트는 기본 문법
 - WEB 환경에서 JAVA를 이용한 DBMS 접근 처리
 - JAVA Logic 처리 구현
 - JAVA를 기반으로 하는 문법 有
 - JSP 고유의 태그도 존재함
 
 => JSP를 통한 처리 결과를 HTML과 CSS로 편집(구현)하여 웹페이지에 출력
 
1. 스크립틀릿
 - 일반적인 자바코드가 쓰이는 부분 : <% ... java 코드 명시 ... %>
  -- 자바 코드 : 변수 선언문을 비롯한 자바 문장을 사용 가능
            : 여러 문장 사용할 수 있음. 문장 구분은 ;
            
 - 하나의 jsp 파일에서 두개 이상의 스크립틀릿을 사용할 수 있음
     이 경우 각 스크립틀릿 간 변수 공유 가능

2. 선언문 (특별한 경우에 사용)
 - 메소드(함수) 선언 : <%! ... java method ... %>
 
3. 표현식 (Expression)
 - 단순 출력 기능
 
 cf) System.out.println(sum(10, 20));  콘솔
 
 	<% out.println(sum(10, 20)); %>    웹, 문장을 더 쓸 수 있으니까 ;으로 구분해줌
 	
 	<%= sum(10, 20) %>                 웹, 단 하나 결과 출력이라서 ; 사용 X
 	
 - 문장 종결자(;)를 사용할 수 없음!
 - 오로지 하나의 값만 출력할 수 있음!
 	
4. 주석
 - HTML 주석은 웹페이지에서 보이지만 스크립틀릿 주석은 보이지 않는다!!!!!













































